import State from '../state';
import * as t from '../shared/estree';
import { IRElement, IRNode } from '../shared/types';
import CodeGen from './codegen';
export declare function identifierFromComponentName(name: string): t.Identifier;
export declare function getMemberExpressionRoot(expression: t.MemberExpression): t.Identifier;
export declare function objectToAST(obj: object, valueMapper: (key: string) => t.Expression): t.ObjectExpression;
export declare function containsDynamicChildren(children: IRNode[]): boolean;
export declare function shouldFlatten(children: IRNode[], state: State): boolean;
export declare function memorizeHandler(codeGen: CodeGen, element: IRElement, componentHandler: t.Expression, handler: t.Expression): t.Expression;
export declare function generateTemplateMetadata(state: State): t.Statement[];
