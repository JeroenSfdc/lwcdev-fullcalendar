"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const path = require("path");
const semver = require("semver");
const command_1 = require("./command");
exports.Command = command_1.default;
const main_1 = require("./main");
exports.run = main_1.run;
const config_1 = require("./config");
exports.Config = config_1.Config;
exports.Plugin = config_1.Plugin;
exports.tsPath = config_1.tsPath;
exports.toCached = config_1.toCached;
const Interfaces = require("./interfaces");
exports.Interfaces = Interfaces;
const Errors = require("./errors");
exports.Errors = Errors;
const Flags = require("./flags");
exports.Flags = Flags;
const help_1 = require("./help");
exports.HelpBase = help_1.HelpBase;
exports.Help = help_1.Help;
exports.getHelpClass = help_1.getHelpClass;
const util_1 = require("./help/util");
exports.toStandardizedId = util_1.toStandardizedId;
exports.toConfiguredId = util_1.toConfiguredId;
const Parser = require("./parser");
exports.Parser = Parser;
function checkCWD() {
    try {
        process.cwd();
    }
    catch (error) {
        if (error.code === 'ENOENT') {
            process.stderr.write('WARNING: current directory does not exist\n');
        }
    }
}
function checkNodeVersion() {
    const root = path.join(__dirname, '..');
    const pjson = require(path.join(root, 'package.json'));
    if (!semver.satisfies(process.versions.node, pjson.engines.node)) {
        process.stderr.write(`WARNING\nWARNING Node version must be ${pjson.engines.node} to use this CLI\nWARNING Current node version: ${process.versions.node}\nWARNING\n`);
    }
}
checkCWD();
checkNodeVersion();
